// <auto-generated />
using System;
using AmanahTeknologTask.Domains;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AmanahTeknologTask.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221014124032_inial-database")]
    partial class inialdatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.BankInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyClientId")
                        .HasColumnType("int");

                    b.Property<int?>("IndividualClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyClientId");

                    b.HasIndex("IndividualClientId");

                    b.ToTable("BankInformation");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.CardInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CCV")
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyClientId")
                        .HasColumnType("int");

                    b.Property<int?>("IndividualClientId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("expireDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyClientId");

                    b.HasIndex("IndividualClientId");

                    b.ToTable("CardInformation");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.CompanyClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyClients");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.IndividualClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IndividualClients");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyClientId")
                        .HasColumnType("int");

                    b.Property<int?>("IndividualClientId")
                        .HasColumnType("int");

                    b.Property<int?>("PaywayId")
                        .HasColumnType("int");

                    b.Property<int>("TaxId")
                        .HasColumnType("int");

                    b.Property<decimal>("Totalprice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyClientId");

                    b.HasIndex("IndividualClientId");

                    b.HasIndex("PaywayId");

                    b.HasIndex("TaxId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.Payway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankInformationId")
                        .HasColumnType("int");

                    b.Property<int>("CardInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BankInformationId");

                    b.HasIndex("CardInformationId");

                    b.ToTable("Payway");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.BankInformation", b =>
                {
                    b.HasOne("AmanahTeknologTask.Domains.Models.CompanyClient", "CompanyClient")
                        .WithMany("BankInformation")
                        .HasForeignKey("CompanyClientId");

                    b.HasOne("AmanahTeknologTask.Domains.Models.IndividualClient", "IndividualClient")
                        .WithMany("BankInformation")
                        .HasForeignKey("IndividualClientId");

                    b.Navigation("CompanyClient");

                    b.Navigation("IndividualClient");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.CardInformation", b =>
                {
                    b.HasOne("AmanahTeknologTask.Domains.Models.CompanyClient", "CompanyClient")
                        .WithMany("CardInformation")
                        .HasForeignKey("CompanyClientId");

                    b.HasOne("AmanahTeknologTask.Domains.Models.IndividualClient", "IndividualClient")
                        .WithMany("CardInformation")
                        .HasForeignKey("IndividualClientId");

                    b.Navigation("CompanyClient");

                    b.Navigation("IndividualClient");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.Invoice", b =>
                {
                    b.HasOne("AmanahTeknologTask.Domains.Models.CompanyClient", "CompanyClient")
                        .WithMany()
                        .HasForeignKey("CompanyClientId");

                    b.HasOne("AmanahTeknologTask.Domains.Models.IndividualClient", "IndividualClient")
                        .WithMany()
                        .HasForeignKey("IndividualClientId");

                    b.HasOne("AmanahTeknologTask.Domains.Models.Payway", "Payway")
                        .WithMany()
                        .HasForeignKey("PaywayId");

                    b.HasOne("AmanahTeknologTask.Domains.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyClient");

                    b.Navigation("IndividualClient");

                    b.Navigation("Payway");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.Payway", b =>
                {
                    b.HasOne("AmanahTeknologTask.Domains.Models.BankInformation", "BankInformation")
                        .WithMany()
                        .HasForeignKey("BankInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmanahTeknologTask.Domains.Models.CardInformation", "CardInformation")
                        .WithMany()
                        .HasForeignKey("CardInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankInformation");

                    b.Navigation("CardInformation");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.Product", b =>
                {
                    b.HasOne("AmanahTeknologTask.Domains.Models.Invoice", null)
                        .WithMany("products")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.CompanyClient", b =>
                {
                    b.Navigation("BankInformation");

                    b.Navigation("CardInformation");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.IndividualClient", b =>
                {
                    b.Navigation("BankInformation");

                    b.Navigation("CardInformation");
                });

            modelBuilder.Entity("AmanahTeknologTask.Domains.Models.Invoice", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
